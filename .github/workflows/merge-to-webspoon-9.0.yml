name: Merge to feature

# Workflow for push on a feature branch
on:
  push:
    branches: [ webspoon-9.0 ]
env:
  SUCCESS_MESSAGE: Artifacts sucessfully published to artifactory.
  FAILURE_MESSAGE: Artifacts not published to artifactory. Please check logs for more information.

  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
  SLACK_CHANNEL: r2d2-pr

  ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
  ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}

  DOCKER_REPOSITORY_URL: dataflowstudio-docker-dev-orl.repo.orl.eng.hitachivantara.com
  HELM_REGISTRY_HOST: https://repo.orl.eng.hitachivantara.com/artifactory/dataflowstudio-helm-dev-orl

  BUILD_NUMBER: ${{ github.run_number }}

  MAVEN_SETTINGS: .github/settings.xml
  HELM_VERSION: v3.1.2

jobs:
  build:
    runs-on: [public]
    steps:

    - name: Discover current branch
      run: |
        REF=$( echo "${{ github.ref }}" ) # gets the branch or tag ref that triggered the workflow (something like 'refs/heads/branch-name')
        REF=$( echo ${REF^^} ) # sets it to uppercase
        REF=$( echo ${REF##*/} ) # removes the 'refs/heads/' reference
        REF=$( echo ${REF//[_]/-} ) # replaces any '_' for a '-'

        echo "CURRENT_BRANCH=$REF" >> $GITHUB_ENV

      # Setup helm
    - name: Setup Helm
      uses: azure/setup-helm@v1
      with:
        version: ${{env.HELM_VERSION}}

      # Do extra steps in https://github.com/HiromuHota/pentaho-kettle (or add the missing projects to this one)

      #Build pentaho-xul-swt dependency
    - name: Build pentaho-xul-swt
      run: |
        rm -rf ./pentaho-xul-swt
        git clone -b webspoon-9.0 https://github.com/HiromuHota/pentaho-commons-xul.git
        mvn clean install -f ./pentaho-xul-swt/pom.xml

    - name: Checkout code
      uses: actions/checkout@v2

      # Update version (add build number)
    - name: Update versions
      run: mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}-${CURRENT_BRANCH}-${{env.BUILD_NUMBER}} -s ${{ env.MAVEN_SETTINGS }}

      # Build Code
    - name: Install and Verify
      run: mvn clean install verify -B -e -Daudit -amd -s ${{env.MAVEN_SETTINGS}} -Ddocker.repository.url=${{env.DOCKER_REPOSITORY_URL}} -Dquarkus.container-image.push=true -Dquarkus.container-image.username=${{env.ARTIFACTORY_USER}} -Dquarkus.container-image.password=${{env.ARTIFACTORY_API_KEY}}

      # Publish to Artifactory
    #- name: Publish Docker Images
    #  run: mvn docker:build docker:push -B -s ${{env.MAVEN_SETTINGS}} -Ddocker.username=${{env.ARTIFACTORY_USER}} -Ddocker.password=${{env.ARTIFACTORY_API_KEY}} -Ddocker.repository.url=${{env.DOCKER_REPOSITORY_URL}}

      # Publish Helm Chart
    - name: Publish Helm Charts
      run: mvn helm:package helm:upload -B -s ${{env.MAVEN_SETTINGS}} -Dhelm.repository.url=${{env.HELM_REGISTRY_HOST}} -Dhelm.username=${{env.ARTIFACTORY_USER}} -Dhelm.password=${{env.ARTIFACTORY_API_KEY}}

      # on sucess
    - name: Slack notification on success
      if: success()
      uses: hbfernandes/slack-action@1.0
      env:
        SLACK_TOKEN: ${{ env.SLACK_TOKEN }}
      with:
        args: |
          {
            "channel": "${{env.SLACK_CHANNEL}}",
            "text": "[${{env.CURRENT_BRANCH}}] ${{env.SUCCESS_MESSAGE}}"
          }
      # On failure
    - name: Slack notification on failure
      if: failure ()
      uses: hbfernandes/slack-action@1.0
      env:
        SLACK_TOKEN: ${{ env.SLACK_TOKEN }}
      with:
        args: |
          {
            "channel": "${{env.SLACK_CHANNEL}}",
            "text": "[${{env.CURRENT_BRANCH}}] ${{env.FAILURE_MESSAGE}}"
          }
